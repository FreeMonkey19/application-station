{"version":3,"sources":["components/Header.js","MainNav.js","auth/Registration.js","auth/Login.js","components/JobList.js","components/Job.js","SearchForm.js","components/Home.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","Component","MainNav","title","to","Registration","props","state","name","email","password","password_confirmation","registrationErrors","handleSubmit","bind","handleChange","event","this","setState","target","value","axios","post","process","user","then","response","console","log","status","handleSuccessfulAuth","data","catch","error","preventDefault","onSubmit","htmlFor","type","placeholder","onChange","required","Login","loginErrors","handleSumbit","id","JobList","jobs","map","job","key","company_logo","src","alt","company_url","url","href","rel","location","Job","useState","setJobs","useEffect","fetch","json","BASE_URL","require","SearchForm","setLocation","description","setDescription","searchResult","setResult","userListings","listingsArray","push","reset","get","onBlur","listing","Home","handleLogoutClick","handleLogin","history","delete","handleLogout","App","loggedInStatus","logged_in","checkLoginStatus","exact","path","render","Boolean","window","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"8WAoBeA,G,YAjBf,uKAEI,OACE,4BAAQC,UAAU,eAChB,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,mBACb,wBAAIA,UAAU,SAAd,yBAEF,yBAAKA,UAAU,iBACb,wBAAIA,UAAU,mBAAd,kCATZ,GAA4BC,cC0BbC,G,MAzBf,uKAEI,OACE,yBAAKF,UAAU,WAAWG,MAAM,gBAC9B,0BAAMH,UAAU,qBAAqBG,MAAM,iBACzC,kBAAC,IAAD,CAASH,UAAU,WAAWI,GAAG,SAAjC,SAIF,0BAAMJ,UAAU,qBAAqBG,MAAM,iBACzC,kBAAC,IAAD,CAASH,UAAU,WAAWI,GAAG,iBAAjC,iBAKF,0BAAMJ,UAAU,qBAAqBG,MAAM,iBACzC,kBAAC,IAAD,CAASH,UAAU,WAAWI,GAAG,WAAjC,gBAhBV,GAA6BH,c,yBCDRI,E,kDACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,MAAQ,CACXC,KAAM,GACNC,MAAO,GACPC,SAAU,GACVC,sBAAuB,GACvBC,mBAAoB,IAGtB,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBAZH,E,yDAgBNE,GACXC,KAAKC,SAAL,eACGF,EAAMG,OAAOX,KAAOQ,EAAMG,OAAOC,U,mCAKzBJ,GAAQ,IAAD,SACuCC,KAAKV,MAAtDC,EADU,EACVA,KAAMC,EADI,EACJA,MAAOC,EADH,EACGA,SAAUC,EADb,EACaA,sBAE/BU,IACGC,KADH,UACWC,6CADX,2BACmE,CAC/DC,KAAM,CACJhB,KAAMA,EACNC,MAAOA,EACPC,SAAUA,EACVC,sBAAuBA,KAG1Bc,MAAK,SAACC,GACLC,QAAQC,IAAI,wBACY,MAApBF,EAASG,QACX,EAAKvB,MAAMwB,qBAAqBJ,EAASK,SAG5CC,OAAM,SAACC,GACNN,QAAQC,IAAI,qBAAsBK,MAEtCjB,EAAMkB,mB,+BAGN,OACE,yBAAKlC,UAAU,0BACb,0BAAMmC,SAAUlB,KAAKJ,cACrB,iDACA,6CAEE,2BAAOuB,QAAQ,QAAf,OAEE,2BACEC,KAAK,OACL7B,KAAK,OACL8B,YAAY,OACZlB,MAAOH,KAAKV,MAAMC,KAClB+B,SAAUtB,KAAKF,aACfyB,UAAQ,KAGZ,2BAAOJ,QAAQ,SACb,2BACEC,KAAK,QACL7B,KAAK,QACL8B,YAAY,QACZlB,MAAOH,KAAKV,MAAME,MAClB8B,SAAUtB,KAAKF,aACfyB,UAAQ,KAGZ,2BAAOJ,QAAQ,YACf,2BACEC,KAAK,WACL7B,KAAK,WACL8B,YAAY,WACZlB,MAAOH,KAAKV,MAAMG,SAClB6B,SAAUtB,KAAKF,aACfyB,UAAQ,KAEV,2BAAOJ,QAAQ,YACf,2BACEC,KAAK,WACL7B,KAAK,wBACL8B,YAAY,wBACZlB,MAAOH,KAAKV,MAAMI,sBAClB4B,SAAUtB,KAAKF,aACfyB,UAAQ,KAGV,4BAAQH,KAAK,UAAb,kB,GA9FgCpC,aCArBwC,E,kDACnB,WAAYnC,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,MAAQ,CACXE,MAAO,GACPC,SAAU,GACVgC,YAAa,IAGf,EAAKC,aAAe,EAAKA,aAAa7B,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBAVH,E,yDAaNE,GACXC,KAAKC,SAAL,eACGF,EAAMG,OAAOX,KAAOQ,EAAMG,OAAOC,U,mCAIzBJ,GAAQ,IAAD,SACUC,KAAKV,MAAzBE,EADU,EACVA,MAAOC,EADG,EACHA,SAEfW,IACGC,KADH,UAGOC,6CAHP,mBAII,CACEC,KAAM,CACJf,MAAOA,EACPC,SAAUA,KAIfe,MAAK,SAACC,GACLC,QAAQC,IAAI,aAAcF,GACF,MAApBA,EAASG,QACX,EAAKvB,MAAMwB,qBAAqBJ,EAASK,SAG5CC,OAAM,SAACC,GACNN,QAAQC,IAAI,cAAeK,MAE/BjB,EAAMkB,mB,+BAIN,OACE,yBAAKlC,UAAU,iBACb,0BAAMmC,SAAUlB,KAAK0B,cACnB,+CACA,4CACA,2BAAOP,QAAQ,SACb,2BACEC,KAAK,QACL7B,KAAK,QACL8B,YAAY,QACZlB,MAAOH,KAAKV,MAAME,MAClB8B,SAAUtB,KAAKF,aACfyB,UAAQ,KAGZ,2BAAOJ,QAAQ,YACb,2BACEC,KAAK,WACLO,GAAG,WACHpC,KAAK,WACL8B,YAAY,WACZlB,MAAOH,KAAKV,MAAMG,SAClB6B,SAAUtB,KAAKF,aACfyB,UAAQ,KAIZ,4BAAQH,KAAK,UAAb,e,GA1EyBpC,a,QCAtB4C,G,MAAU,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACxB,OACE,yBAAK9C,UAAU,aACZ8C,EAAKC,KAAI,SAACC,GACT,OACE,yBAAKC,IAAKD,EAAIJ,GAAI5C,UAAU,6CAEC,OAArBgD,EAAIE,aACC,iDAGL,yBACElD,UAAU,YACVmD,IAAKH,EAAIE,aACTE,IAAI,QAMZ,wBAAIpD,UAAU,cAEc,OAApBgD,EAAIK,YACC,4BAAKL,EAAIM,KAGd,uBACEC,KAAMP,EAAIK,YACVlC,OAAO,SACPqC,IAAI,sBACJlB,YAAY,qBAEZ,2CAMV,yBAAKtC,UAAU,eACb,wBAAIA,UAAU,cAAd,UAAmCgD,EAAI7C,OACvC,wBAAIH,UAAU,cAAd,aAAsCgD,EAAIS,UAC1C,wBAAIzD,UAAU,cAAd,uCCxBC0D,MAjBf,WAAgB,IAAD,EACWC,mBAAS,IADpB,mBACNb,EADM,KACAc,EADA,KAUb,OARAC,qBAAU,WACRC,MAAM,GAAD,OAAIvC,6CAAJ,4BAA4DE,MAAK,SAACC,GAAD,OACpEA,EAASqC,OAAOtC,MAAK,SAACM,GACpB6B,EAAQ7B,EAAKe,cAGhB,IAGD,yBAAK9C,UAAU,OACb,kBAAC,EAAD,CAAS8C,KAAMA,MCXfkB,G,YAAQ,UAAMzC,6CAAN,sBACRF,EAAQ4C,EAAQ,IAkHPC,EAhHI,WAAO,IAAD,EACSP,mBAAS,IADlB,mBAChBF,EADgB,KACNU,EADM,OAEeR,mBAAS,IAFxB,mBAEhBS,EAFgB,KAEHC,EAFG,OAGWV,mBAAS,IAHpB,mBAGhBW,EAHgB,KAGFC,EAHE,KAgBjBC,EAAe,GACfC,EAAgBH,EAAY,KAClC,IAAK,IAAIrB,KAAOwB,EACdD,EAAaE,KAAKD,EAAcxB,IAGlC,OACE,6BACE,yBAAKjD,UAAU,iBACb,0BAAMmC,SApBK,SAACnB,GAChBA,EAAMkB,iBACNlB,EAAMG,OAAOwD,QACbtD,EACGuD,IADH,UACUZ,EADV,uBACiCI,EADjC,qBACyDX,IACtDhC,MAAK,SAACC,GACL6C,EAAU7C,EAASK,WAejB,2BAAOK,QAAQ,YAAf,WAEE,4BACEQ,GAAG,WACHxB,MAAOqC,EACPnB,YAAY,WACZC,SAAU,SAACvB,GAAD,OAAWmD,EAAYnD,EAAMG,OAAOC,QAC9CyD,OAAQ,SAAC7D,GAAD,OAAWmD,EAAYnD,EAAMG,OAAOC,SAE5C,4CACA,0CACA,iDACA,2CACA,+CAGJ,2BAAOgB,QAAQ,eAAf,cAEE,4BACEQ,GAAG,cACHxB,MAAOgD,EACP9B,YAAY,cACZC,SAAU,SAACvB,GAAD,OAAWqD,EAAerD,EAAMG,OAAOC,QACjDyD,OAAQ,SAAC7D,GAAD,OAAWqD,EAAerD,EAAMG,OAAOC,SAE/C,+CACA,8CACA,0CACA,yCACA,wDAGJ,4CAGJ,yBAAKpB,UAAU,aACZwE,EAAazB,KAAI,SAAC+B,GACjB,OACE,yBAAK9E,UAAU,kCAAkCiD,IAAK6B,EAAQlC,IAE7B,OAAzBkC,EAAQ5B,aACH,iDAGL,yBACElD,UAAU,gBACVmD,IAAK2B,EAAQ5B,aACbE,IAAI,QAMZ,wBAAIpD,UAAU,cAEkB,OAAxB8E,EAAQzB,YACH,gDAGL,uBACEE,KAAMuB,EAAQzB,YACdlC,OAAO,SACPqC,IAAI,sBACJlB,YAAY,qBAJd,cAaR,yBAAKtC,UAAU,eACf,wBAAIA,UAAU,cAAd,UAAmC8E,EAAQ3E,OAC3C,wBAAIH,UAAU,cAAd,aAAsC8E,EAAQrB,UAC9C,wBAAIzD,UAAU,cAAd,uCCrGO+E,E,kDACnB,WAAYzE,GAAQ,IAAD,8BACjB,cAAMA,IAEDwB,qBAAuB,EAAKA,qBAAqBhB,KAA1B,gBAC5B,EAAKkE,kBAAoB,EAAKA,kBAAkBlE,KAAvB,gBAJR,E,iEAOEiB,GAEnBd,KAAKX,MAAM2E,YAAYlD,GACvBJ,QAAQC,IAAI,wBACZD,QAAQC,IAAIG,GAKZd,KAAKX,MAAM4E,QAAQR,KAAK,W,0CAGL,IAAD,OAClBrD,IACG8D,OAAO,gBACP1D,MAAK,SAACC,GACLC,QAAQC,IAAIF,GACZ,EAAKpB,MAAM8E,kBAEZpD,OAAM,SAACC,GACNN,QAAQC,IAAI,eAAgBK,MAEhChB,KAAKX,MAAM4E,QAAQR,KAAK,O,+BAIxB,OACE,6BACE,kBAAC,EAAD,CAAc5C,qBAAsBb,KAAKa,uBACzC,kBAAC,EAAD,CAAOA,qBAAsBb,KAAKa,4B,GArCR7B,aC6HnBoF,E,kDApHb,WAAY/E,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,MAAQ,CACX+E,eAAgB,gBAChB9D,KAAM,IAGR,EAAKyD,YAAc,EAAKA,YAAYnE,KAAjB,gBACnB,EAAKsE,aAAe,EAAKA,aAAatE,KAAlB,gBATH,E,+DAYC,IAAD,OACjBO,IACGuD,IADH,UACUrD,6CADV,cAEGE,MAAK,SAACC,GACLC,QAAQC,IAAI,wBAEZD,QAAQC,IAAI,0BAEZD,QAAQC,IAAI,+BACZD,QAAQC,IAAIF,GAGVA,EAASK,KAAKwD,WACgB,kBAA9B,EAAKhF,MAAM+E,eAEX,EAAKpE,SAAS,CACZoE,eAAgB,YAChB9D,KAAME,EAASK,KAAKP,QAGrBE,EAASK,KAAKwD,UACgB,cAA9B,EAAKhF,MAAM+E,gBAEZ,EAAKpE,SAAS,CACZoE,eAAgB,gBAChB9D,KAAM,QAIXQ,OAAM,SAACC,GACNN,QAAQC,IAAI,oBAAqBK,Q,0CAKrChB,KAAKuE,qB,qCAGLvE,KAAKC,SAAS,CACZoE,eAAgB,gBAChB9D,KAAM,O,kCAGEO,GACVd,KAAKC,SAAS,CACZoE,eAAgB,YAChB9D,KAAMO,EAAKP,S,+BAIL,IAAD,OACP,OACE,yBAAKxB,UAAU,OACb,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEyF,OAAK,EACLC,KAAM,IAENC,OAAQ,SAACrF,GAAD,OACN,6BACE,kBAAC,EAAD,iBACMA,EADN,CAEE2E,YAAa,EAAKA,YAClBG,aAAc,EAAKA,aACnBE,eAAgB,EAAK/E,MAAM+E,sBAKnC,kBAAC,IAAD,CAAOI,KAAK,SACV,kBAAC,EAAD,MACA,yBAAK1F,UAAU,QACb,yBAAKA,UAAU,YACZ,IACD,yDACA,qDAEF,kBAAC,EAAD,QAGJ,kBAAC,IAAD,CAAO0F,KAAK,WACV,yBAAK1F,UAAU,QACb,yBAAKA,UAAU,QACb,uDACA,iEAEF,kBAAC,EAAD,MACA,kBAAC,EAAD,QAGJ,kBAAC,IAAD,CAAO0F,KAAK,iBACV,yBAAK1F,UAAU,QACb,kBAAC,EAAD,MACA,kBAAC,EAAD,e,GA5GEC,aCHE2F,QACW,cAA7BC,OAAOpC,SAASqC,UAEe,UAA7BD,OAAOpC,SAASqC,UAEhBD,OAAOpC,SAASqC,SAASC,MACvB,2D,MCVNC,IAASL,OACP,kBAAC,IAAMM,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDuHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB7E,MAAK,SAAA8E,GACJA,EAAaC,gBAEdxE,OAAM,SAAAC,GACLN,QAAQM,MAAMA,EAAMwE,c","file":"static/js/main.49ff045e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Header.css\";\n\nexport class Header extends Component {\n  render() {\n    return (\n      <header className=\"main-header\">\n        <div className=\"title-container\">\n          <div className=\"main-page-title\">\n            <h1 className=\"title\">Application Station:</h1>\n          </div>\n          <div className=\"page-subtitle\">\n            <h2 className=\"header-subtitle\">Your Search Stops Here!</h2>\n          </div>\n        </div>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport \"./MainNav.css\";\nimport { NavLink } from \"react-router-dom\";\n\nexport class MainNav extends Component {\n  render() {\n    return (\n      <nav className=\"main-nav\" title=\"main-nav-bar\">\n        <span className=\"nav-link-container\" title=\"main-nav-link\">\n          <NavLink className=\"nav-link\" to=\"/home\">\n            Home\n          </NavLink>\n        </span>\n        <span className=\"nav-link-container\" title=\"main-nav-link\">\n          <NavLink className=\"nav-link\" to=\"/all_listings\">\n            All Listings\n          </NavLink>\n        </span>\n\n        <span className=\"nav-link-container\" title=\"main-nav-link\">\n          <NavLink className=\"nav-link\" to=\"/logout\">\n            Logout\n          </NavLink>\n        </span>\n      </nav>\n    );\n  }\n}\n\nexport default MainNav;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nexport default class Registration extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      password_confirmation: \"\",\n      registrationErrors: \"\",\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  // take in and update state\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  }\n\n  // when the form is submitted for a new user\n  handleSubmit(event) {\n    const { name, email, password, password_confirmation } = this.state;\n\n    axios\n      .post(`${process.env.REACT_APP_BACKEND}api/users/registrations`, {\n        user: {\n          name: name,\n          email: email,\n          password: password,\n          password_confirmation: password_confirmation,\n        },\n      })\n      .then((response) => {\n        console.log(\"this is the response\");\n        if (response.status === 201) {\n          this.props.handleSuccessfulAuth(response.data);\n        }\n      })\n      .catch((error) => {\n        console.log(\"registration error\", error);\n      });\n    event.preventDefault();\n  }\n  render() {\n    return (\n      <div className=\"centered search-params\">\n        <form onSubmit={this.handleSubmit}>\n        <h3>New to this site?</h3>\n        <h4>Register Here</h4>\n\n          <label htmlFor=\"name\">\n            Name\n            <input\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"name\"\n              value={this.state.name}\n              onChange={this.handleChange}\n              required\n            ></input>\n          </label>\n          <label htmlFor=\"email\">\n            <input\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"Email\"\n              value={this.state.email}\n              onChange={this.handleChange}\n              required\n            ></input>\n          </label>\n          <label htmlFor=\"password\">\n          <input\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Password\"\n            value={this.state.password}\n            onChange={this.handleChange}\n            required\n          ></input></label>\n          <label htmlFor=\"password\">\n          <input\n            type=\"password\"\n            name=\"password_confirmation\"\n            placeholder=\"Password_confirmation\"\n            value={this.state.password_confirmation}\n            onChange={this.handleChange}\n            required\n          ></input></label>\n\n          <button type=\"submit\">Register</button>\n        </form>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: \"\",\n      password: \"\",\n      loginErrors: \"\",\n    };\n\n    this.handleSumbit = this.handleSumbit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  }\n  // when the form is submitted for a returning user\n  handleSumbit(event) {\n    const { email, password } = this.state;\n\n    axios\n      .post(\n        // call flask\n        `${process.env.REACT_APP_BACKEND}api/users/login`,\n        {\n          user: {\n            email: email,\n            password: password,\n          },\n        }\n      )\n      .then((response) => {\n        console.log(\"from login\", response);\n        if (response.status === 200) {\n          this.props.handleSuccessfulAuth(response.data);\n        }\n      })\n      .catch((error) => {\n        console.log(\"login error\", error);\n      });\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n      <div className=\"search-params\">\n        <form onSubmit={this.handleSumbit}>\n          <h3>Returning User?</h3>\n          <h4>Sign In Here</h4>\n          <label htmlFor=\"email\">\n            <input\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"Email\"\n              value={this.state.email}\n              onChange={this.handleChange}\n              required\n            ></input>\n          </label>\n          <label htmlFor=\"password\">\n            <input\n              type=\"password\"\n              id=\"password\"\n              name=\"password\"\n              placeholder=\"Password\"\n              value={this.state.password}\n              onChange={this.handleChange}\n              required\n            ></input>\n          </label>\n\n          <button type=\"submit\">Login</button>\n        </form>\n      </div> //\n    ); // this is the return closing tab\n  } // this is the render closing bracket\n}\n","import React from \"react\";\nimport \"./JobList.css\";\n\nexport const JobList = ({ jobs }) => {\n  return (\n    <div className=\"outer-div\">\n      {jobs.map((job) => {\n        return (\n          <div key={job.id} className=\"job-container card w-25 p-3 job-container\">\n            {(() => {\n              if (job.company_logo === null) {\n                return <h3>No Logo Available</h3>;\n              } else {\n                return (\n                  <img\n                    className=\"job-image\"\n                    src={job.company_logo}\n                    alt=\"...\"\n                  ></img>\n                );\n              }\n            })()}\n\n            <h3 className=\"card-title\">\n              {(() => {\n                if (job.company_url === null) {\n                  return <h3>{job.url}</h3>;\n                } else {\n                  return (\n                    <a\n                      href={job.company_url}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                      placeholder=\"No logo available\"\n                    >\n                      <h5>More Info</h5>\n                    </a>\n                  );\n                }\n              })()}\n            </h3>\n            <div className=\"card-footer\">\n              <h6 className=\"card-title\">Title: {job.title}</h6>\n              <h6 className=\"card-title\">Location: {job.location}</h6>\n              <h6 className=\"card-title\">Date Created: July 23, 2020</h6>\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default JobList;\n","import React, { useEffect, useState } from \"react\";\nimport { JobList } from \"./JobList\";\n\nfunction Job() {\n  const [jobs, setJobs] = useState([]);\n  useEffect(() => {\n    fetch(`${process.env.REACT_APP_BACKEND}api/job_listings?page=2`).then((response) =>\n      response.json().then((data) => {\n        setJobs(data.jobs);\n      })\n    );\n  }, []);\n\n  return (\n    <div className=\"job\">\n      <JobList jobs={jobs} />\n    </div>\n  );\n}\n\nexport default Job;\n","import React, { useState } from \"react\";\nimport \"./SearchForm.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nconst BASE_URL = `${process.env.REACT_APP_BACKEND}api/job_listings?`;\nconst axios = require(\"axios\");\n\nconst SearchForm = () => {\n  const [location, setLocation] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [searchResult, setResult] = useState([]);\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    event.target.reset();\n    axios\n      .get(`${BASE_URL}description=${description}&location=${location}`)\n      .then((response) => {\n        setResult(response.data);\n       \n      });\n  };\n\n  const userListings = [];\n  const listingsArray = searchResult[\"jobs\"];\n  for (var key in listingsArray) {\n    userListings.push(listingsArray[key]);\n  }\n\n  return (\n    <div>\n      <div className=\"search-params\">\n        <form onSubmit={onSubmit}>\n          <label htmlFor=\"location\">\n            Location\n            <select\n              id=\"location\"\n              value={location}\n              placeholder=\"Location\"\n              onChange={(event) => setLocation(event.target.value)}\n              onBlur={(event) => setLocation(event.target.value)}\n            >\n              <option>Portland</option>\n              <option>Remote</option>\n              <option>San Francisco</option>\n              <option>Seattle</option>\n              <option>Vancouver</option>\n            </select>\n          </label>\n          <label htmlFor=\"description\">\n            description\n            <select\n              id=\"description\"\n              value={description}\n              placeholder=\"Description\"\n              onChange={(event) => setDescription(event.target.value)}\n              onBlur={(event) => setDescription(event.target.value)}\n            >\n              <option>Engineering</option>\n              <option>Javascript</option>\n              <option>Python</option>\n              <option>React</option>\n              <option>Software Developer</option>\n            </select>\n          </label>\n          <button>Submit</button>\n        </form>\n      </div>\n      <div className=\"outer-div\">\n        {userListings.map((listing) => {\n          return (\n            <div className=\"listing-container card w-25 p-3\" key={listing.id}>\n              {(() => {\n                if (listing.company_logo === null) {\n                  return <h3>No Logo Available</h3>;\n                } else {\n                  return (\n                    <img\n                      className=\"listing-image\"\n                      src={listing.company_logo}\n                      alt=\"...\"\n                    ></img>\n                  );\n                }\n              })()}\n\n              <h5 className=\"card-title\">\n                {(() => {\n                  if (listing.company_url === null) {\n                    return <h3>No Url Available</h3>;\n                  } else {\n                    return (\n                      <a \n                        href={listing.company_url}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        placeholder=\"No logo available\"\n                      >\n                        More Info\n                      </a>\n                    );\n                  }\n                })()}\n              </h5>\n             \n              <div className=\"card-footer\">\n              <h6 className=\"card-title\">Title: {listing.title}</h6>\n              <h6 className=\"card-title\">Location: {listing.location}</h6>\n              <h6 className=\"card-title\">Date Created: July 23, 2020</h6>\n               \n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default SearchForm;\n","import React, { Component } from \"react\";\n\nimport Login from \"../auth/Login\";\nimport Registration from \"../auth/Registration\";\n\nimport axios from \"axios\";\n\nexport default class Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSuccessfulAuth = this.handleSuccessfulAuth.bind(this);\n    this.handleLogoutClick = this.handleLogoutClick.bind(this);\n  }\n\n  handleSuccessfulAuth(data) {\n    //  update parent component with render props\n    this.props.handleLogin(data);\n    console.log(\"right here charlotte\");\n    console.log(data);\n\n    // redirect user - Home is defined inside a route.\n    // we have access to .history via Router props in App.js where we render Home.\n    // here the user is successfully registered and as soon as that takes place - redirect to dashboard\n    this.props.history.push(\"/home\");\n  }\n\n  handleLogoutClick() {\n    axios\n      .delete(\"/auth/logout\")\n      .then((response) => {\n        console.log(response);\n        this.props.handleLogout();\n      })\n      .catch((error) => {\n        console.log(\"logout error\", error);\n      });\n    this.props.history.push(\"/\");\n  }\n\n  render() {\n    return (\n      <div>\n        <Registration handleSuccessfulAuth={this.handleSuccessfulAuth} />\n        <Login handleSuccessfulAuth={this.handleSuccessfulAuth} />\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport \"./App.css\";\nimport Header from \"./components/Header\";\nimport MainNav from \"./MainNav\";\nimport Registration from \"./auth/Registration\";\nimport Login from \"./auth/Login\";\nimport Job from \"./components/Job\";\nimport SearchForm from \"./SearchForm\";\nimport Home from \"./components/Home\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport axios from \"axios\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loggedInStatus: \"NOT_LOGGED_IN\",\n      user: {},\n    };\n\n    this.handleLogin = this.handleLogin.bind(this);\n    this.handleLogout = this.handleLogout.bind(this);\n  }\n\n  checkLoginStatus() {\n    axios\n      .get(`${process.env.REACT_APP_BACKEND}api/users`)\n      .then((response) => {\n        console.log(\"this is the response\");\n\n        console.log(\"this is line 38 app.js\");\n\n        console.log(\"check login status response\");\n        console.log(response);\n\n        if (\n          response.data.logged_in &&\n          this.state.loggedInStatus === \"NOT_LOGGED_IN\"\n        ) {\n          this.setState({\n            loggedInStatus: \"LOGGED_IN\",\n            user: response.data.user,\n          });\n        } else if (\n          !response.data.logged_in &\n          (this.state.loggedInStatus === \"LOGGED_IN\")\n        ) {\n          this.setState({\n            loggedInStatus: \"NOT_LOGGED_IN\",\n            user: {},\n          });\n        }\n      })\n      .catch((error) => {\n        console.log(\"check login error\", error);\n      });\n  }\n\n  componentDidMount() {\n    this.checkLoginStatus();\n  }\n  handleLogout() {\n    this.setState({\n      loggedInStatus: \"NOT_LOGGED_IN\",\n      user: {},\n    });\n  }\n  handleLogin(data) {\n    this.setState({\n      loggedInStatus: \"LOGGED_IN\",\n      user: data.user,\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Router>\n          <Header />\n          <Switch>\n            <Route\n              exact\n              path={\"/\"}\n              // render={props} gives us all the props of React Router and allows us to add more\n              render={(props) => (\n                <div>\n                  <Home\n                    {...props}\n                    handleLogin={this.handleLogin}\n                    handleLogout={this.handleLogout}\n                    loggedInStatus={this.state.loggedInStatus}\n                  />\n                </div>\n              )}\n            />\n            <Route path=\"/home\">\n              <MainNav />\n              <div className=\"logo\">\n                <div className=\"subtitle\">\n                  {\" \"}\n                  <h2>Careers taking off daily!</h2>\n                  <h2>Reserve yours today!</h2>\n                </div>\n                <SearchForm />\n              </div>\n            </Route>\n            <Route path=\"/logout\">\n              <div className=\"logo\">\n                <div className=\"left\">\n                  <h1>Thank you for visiting.</h1>\n                  <h3>You are successfully logged out.</h3>\n                </div>\n                <Registration />\n                <Login />\n              </div>\n            </Route>\n            <Route path=\"/all_listings\">\n              <div className=\"logo\">\n                <MainNav />\n                <Job />\n              </div>\n            </Route>\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'semantic-ui-css/semantic.min.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\n\n"],"sourceRoot":""}