{"version":3,"sources":["MainNav.js","Header.js","JobList.js","Job.js","Sidebar.js","UserList.js","User.js","SearchForm.js","auth/Registration.js","auth/Login.js","Home.js","Dashboard.js","App.js","serviceWorker.js","index.js"],"names":["MainNav","className","title","to","exact","Component","Header","JobList","jobs","map","job","Card","key","id","Content","heading","Description","company","location","extra","Job","useState","setJobs","useEffect","fetch","then","response","json","data","console","log","Sidebar","href","target","rel","UserList","users","user","name","User","setUsers","axios","require","SearchForm","setLocation","description","setDescription","searchResult","setResult","onSubmit","event","preventDefault","get","htmlFor","value","placeholder","onChange","onBlur","Registration","props","state","email","password","password_confirmation","registrationErrors","handleSubmit","bind","handleChange","this","setState","post","status","handleSuccessfulAuth","catch","error","type","required","Login","loginErrors","handleSumbit","logged_in","Home","handleLogoutClick","handleLogin","history","push","delete","handleLogout","loggedInStatus","onClick","Dashboard","App","checkLoginStatus","path","render","Boolean","window","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.5f9ba5e3.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./MainNav.css\";\nimport { NavLink } from \"react-router-dom\";\n\nexport class MainNav extends Component {\n  render() {\n    return (\n      <nav className=\"main-nav\" title=\"main-nav-bar\">\n        <span className=\"nav-link-container\" title=\"main-nav-link\">\n          <NavLink className=\"nav-link\" to=\"/\" exact>\n            Home\n          </NavLink>\n        </span>\n        <span className=\"nav-link-container move-right\" title=\"main-nav-link\">\n          <NavLink className=\"nav-link\" to=\"/login\">\n            Login\n          </NavLink>\n        </span>\n        <span className=\"nav-link-container\" title=\"main-nav-link\">\n          <NavLink className=\"nav-link\" to=\"/logged\">\n            Logged\n          </NavLink>\n        </span>\n        <span className=\"nav-link-container\" title=\"main-nav-link\">\n          <NavLink className=\"nav-link\" to=\"/dashboard\">\n            Dashboard\n          </NavLink>\n        </span>\n        <span className=\"nav-link-container\" title=\"main-nav-link\">\n          <NavLink className=\"nav-link\" to=\"/search_results\">\n            Search Results\n          </NavLink>\n        </span>\n        <span className=\"nav-link-container\" title=\"main-nav-link\">\n          <NavLink className=\"nav-link\" to=\"/users\">\n            User List\n          </NavLink>\n        </span>\n      </nav>\n\n    );\n  }\n}\n\nexport default MainNav;\n","import React, { Component } from \"react\";\nimport { MainNav } from \"./MainNav\";\nimport \"./Header.css\";\n\nexport class Header extends Component {\n  render() {\n    return (\n      <header className=\"main-header\">\n        <div className=\"title-container\">\n          <div className=\"main-page-title\">\n            <h1 className=\"title\">Application Station:</h1>\n          </div>\n          <div className=\"page-subtitle\">\n            <h2 className=\"header-subtitle\">\n              Your Search Stops Here!.\n            </h2>\n          </div>\n        </div>\n        <MainNav />\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","import React from \"react\";\nimport { Card } from \"semantic-ui-react\";\n\nexport const JobList = ({ jobs }) => {\n  return (\n    <div>\n      {jobs.map((job) => {\n        return (\n          <Card key={job.id} className=\"card\">\n            <Card.Content heading={\"Job Listing\"}>\n              <Card.Description>Company: {job.company}</Card.Description>\n\n              <Card.Description>Title: {job.title}</Card.Description>\n              <Card.Description>Location: {job.location}</Card.Description>\n\n              <Card.Content extra>\n                <button className=\"btn btn-primary\">Apply</button>\n              </Card.Content>\n            </Card.Content>\n          </Card>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default JobList;\n","import React, { useEffect, useState } from \"react\";\nimport './Job.css';\nimport { JobList } from \"./JobList\";\n\nfunction Job() {\n  const [jobs, setJobs] = useState([]);\n  useEffect(() => {\n    fetch(\"/api/job_listings\").then((response) =>\n      response.json().then((data) => {\n        setJobs(data.jobs);\n      })\n    );\n  }, []);\n\n  console.log(jobs)\n\n  return (\n    <div className=\"Job\">\n      <JobList jobs={jobs} />\n    </div>\n  );\n}\n\nexport default Job;","import React, { Component } from \"react\";\nimport \"./Sidebar.css\";\n\n\nexport class Sidebar extends Component {\n  render() {\n    return (\n      <div className=\"sidebar-container\">\n        <div className=\"sidebar-wrapper\">\n          <div className=\"sidebar-quote-container\">\n            <p className=\"sidebar-quote\">\n              \"Great careers lead to great vacations!\"\n            </p>\n            <p className=\"quote-author\">-Author Unknown</p>\n          </div>\n\n          <div className=\"sidebar-pics-container\">\n            <div className=\"sidebar-pic\">\n                A photo goes here\n            </div>{\" \"}\n            <span className=\"photo-description\">\n              Description of photo here\n            </span>\n          </div>\n          <div className=\"sidebar-nav-container\">\n              This is the sidebar nav container\n             <a\n              className=\"sidebar-a-link\"\n              href=\"https://www.monster.com\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n                clickable logo goes here\n             </a>\n\n            <a\n              className=\"sidebar-a-link\"\n              href=\"https://www.buildseattle.com\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n                clickable logo goes here\n            </a> \n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Sidebar;\n","import React from \"react\";\n\nexport const UserList = ({ users }) => {\n  return (\n    <div>\n      {users.map((user) => {\n        return (\n          <div key={user.id}>\n            <ul>\n              <li>\n                <h2>{user.name}</h2>\n              </li>\n            </ul>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default UserList;\n","import React, { useEffect, useState } from \"react\";\n// import \"./User.css\";\nimport { UserList } from \"./UserList\";\n\nfunction User() {\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    fetch(\"/api/users\").then((response) =>\n      response.json().then((data) => {\n        setUsers(data.users);\n      })\n    );\n  }, []);\n\n  console.log(users);\n\n  return (\n    <div className=\"User\">\n      <UserList users={users} />\n    </div>\n  );\n}\n\nexport default User;\n","import React, { useState } from 'react';\n// import Job from './Job';\n// import SearchDetail from './SearchDetail';\nimport './SearchForm.css'\n// before deployment fix proxy to 5000\nconst BASE_URL = 'https://application-station.herokuapp.com/api/job_listings?';\nconst axios = require('axios');\n\nconst SearchForm = () => {\n  const [location, setLocation] = useState(\"Seattle, WA\")\n  const [description, setDescription] = useState(\"Python\");\n  // const [submission, setSubmission] = useState(\"\");\n  const [searchResult, setResult] = useState([]);\n\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    axios.get(`${BASE_URL}description=${description}&location=${location}`)\n      .then((response) => {\n        setResult(response.data);\n      });\n\n  };\n\n  console.log(searchResult)\n\n  // show job search details \n  // const [searchDetail, setSearchDetail] = useState([]);\n\n  // const onClickDetails = (job) => {\n  //   setSearchDetail(job);\n\n  // }\n\n  // const generateSearches = searchResult.map((search) => {\n  //   return <Job key={search.id} job={search} onClickCallBack={onClickDetails} />\n  // })\n\n  return (\n      <div className=\"search-params\">\n        <form onSubmit={onSubmit}>\n          <label htmlFor=\"location\">\n            Location\n        <select\n              id='location'\n              value={location}\n              placeholder=\"Location\"\n              onChange={event => setLocation(event.target.value)}\n              onBlur={event => setLocation(event.target.value)}>\n              <option>Seattle</option>\n              <option>Portland</option>\n              <option>San Francisco</option>\n\n            </select>\n          </label>\n          <label htmlFor=\"description\">\n            description\n        <select\n              id=\"description\"\n              value={description}\n              placeholder=\"Description\"\n              onChange={event => setDescription(event.target.value)}\n              onBlur={event => setDescription(event.target.value)}>\n              <option>Python</option>\n              <option>Javascript</option>\n              <option>React</option>\n              <option>Ruby on Rails</option>\n            </select>\n\n          </label>\n          <button>Submit</button>\n\n        </form>\n      </div>\n\n\n    \n  )\n}\n\nexport default SearchForm;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nexport default class Registration extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      password_confirmation: \"\",\n      registrationErrors: \"\",\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  // take in and update state\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  }\n\n  // when the form is submitted for a new user\n  handleSubmit(event) {\n    const { name, email, password, password_confirmation } = this.state;\n\n    axios\n      .post(\"https://application-station.herokuapp.com/api/users/registrations\", {\n        user: {\n          name: name,\n          email: email,\n          password: password,\n          password_confirmation: password_confirmation,\n        },\n      })\n      .then((response) => {\n        console.log(\"this is the response\");\n        console.log(response);\n        console.log(response.data.status)\n        if (response.status === 201) {\n          console.log('in registration, status is created');\n          this.props.handleSuccessfulAuth(response.data);\n        }\n      })\n      .catch((error) => {\n        console.log(\"registration error\", error);\n      });\n    event.preventDefault();\n  }\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <input\n            type=\"name\"\n            name=\"name\"\n            placeholder=\"name\"\n            value={this.state.name}\n            onChange={this.handleChange}\n            required\n          ></input>\n\n          <input\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Email\"\n            value={this.state.email}\n            onChange={this.handleChange}\n            required\n          ></input>\n          <input\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Password\"\n            value={this.state.password}\n            onChange={this.handleChange}\n            required\n          ></input>\n          <input\n            type=\"password_confirmation\"\n            name=\"password_confirmation\"\n            placeholder=\"Password_confirmation\"\n            value={this.state.password_confirmation}\n            onChange={this.handleChange}\n            required\n          ></input>\n\n          <button type=\"submit\">Register</button>\n        </form>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: \"\",\n      password: \"\",\n      loginErrors: \"\",\n    };\n\n    this.handleSumbit = this.handleSumbit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  }\n\n  handleSumbit(event) {\n    const { email, password } = this.state;\n\n    axios\n      .post(\n        // call flask\n        \"https://application-station.herokuapp.com/api/users/login\",\n        {\n          user: {\n            email: email,\n            password: password,\n          },\n        }\n      )\n      .then((response) => {\n          console.log(\"from login\", response);\n        if (response.data.logged_in) {\n          if (response.data.status === \"created\") {\n            console.log(\"you got here\");\n          }\n            this.props.handleSuccessfulAuth(response.data);\n        }\n      })\n      .catch((error) => {\n        console.log(\"login error\", error);\n      });\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleSumbit}>\n          <input\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Email\"\n            value={this.state.email}\n            onChange={this.handleChange}\n            required\n          ></input>\n          <input\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Password\"\n            value={this.state.password}\n            onChange={this.handleChange}\n            required\n          ></input>\n\n          <button type=\"submit\">Login</button>\n        </form>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n// import { render } from '@testing-library/react';\n// import SearchForm from './SearchForm';\n// import Sidebar from './Sidebar';\n\nimport axios from \"axios\";\n\nimport Registration from \"./auth/Registration\";\nimport Login from \"./auth/Login\";\n\nexport default class Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSuccessfulAuth = this.handleSuccessfulAuth.bind(this);\n    this.handleLogoutClick = this.handleLogoutClick.bind(this);\n  }\n\n  handleSuccessfulAuth(data) {\n    //   update parent component with render props\n    // handleLogin is in App\n    this.props.handleLogin(data);\n    console.log('this is the date')\n    console.log(data)\n\n    // redirect user - Home is defined inside a route. \n    // we have access to .history via Router props in App.js where we render Home.\n    // here the user is successfully registered and as soon as that takes place - redirect to dashboard\n    this.props.history.push(\"/dashboard\");\n  }\n\n  handleLogoutClick() {\n    axios\n      .delete(\"/auth/logout\")\n      .then(response => {\n          console.log(response)\n        this.props.handleLogout();\n      })\n      .catch(error => {\n        console.log(\"logout error\", error);\n      });\n  }\n\n\n  render() {\n    return (\n      <div>\n        <h1>Home</h1>\n        <h1>Status: {this.props.loggedInStatus}</h1>\n        <button onClick={() => this.handleLogoutClick()}>Logout</button>\n        <Registration handleSuccessfulAuth={this.handleSuccessfulAuth} />\n        <Login handleSuccessfulAuth={this.handleSuccessfulAuth} />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nconst Dashboard = (props) => {\n  return (\n    <div>\n      <div>\n        <h1>Dashboard Component</h1>\n        <h1>Status: {props.loggedInStatus}</h1>\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Header from \"./Header\";\nimport Job from \"./Job\";\nimport Sidebar from \"./Sidebar\";\nimport User from \"./User\";\nimport SearchForm from \"./SearchForm\";\nimport Home from \"./Home\";\nimport Dashboard from \"./Dashboard\";\nimport {\n  HashRouter as Router,\n  // Redirect,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport axios from \"axios\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loggedInStatus: \"NOT_LOGGED_IN\",\n      user: {},\n    };\n\n    this.handleLogin = this.handleLogin.bind(this);\n    this.handleLogout = this.handleLogout.bind(this);\n  }\n\n  checkLoginStatus() {\n    axios\n      .get(\"/api/users\")\n      .then((response) => {\n        console.log(\"this is the response\");\n\n        console.log(\"this is line 38 app.js\");\n\n        console.log(\"check login status response\");\n        console.log(response);\n\n        if (\n          response.data.logged_in &&\n          this.state.loggedInStatus === \"NOT_LOGGED_IN\"\n        ) {\n          this.setState({\n            loggedInStatus: \"LOGGED_IN\",\n            user: response.data.user,\n          });\n        } else if (\n          !response.data.logged_in &\n          (this.state.loggedInStatus === \"LOGGED_IN\")\n        ) {\n          this.setState({\n            loggedInStatus: \"NOT_LOGGED_IN\",\n            user: {},\n          });\n        }\n      })\n      .catch((error) => {\n        console.log(\"check login error\", error);\n      });\n  }\n\n  componentDidMount() {\n    this.checkLoginStatus();\n  }\n\n  handleLogout() {\n    this.setState({\n      loggedInStatus: \"NOT_LOGGED_IN\",\n      user: {},\n    });\n  }\n  // this is also in Home\n  handleLogin(data) {\n    this.setState({\n      loggedInStatus: \"LOGGED_IN\",\n      user: data.user,\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Router>\n          <Header />\n          <Switch>\n            <Route\n              exact\n              path={\"/\"}\n              // render={props} gives us all the props of React Router and allows us to add more\n              render={(props) => (\n                <Home\n                  {...props}\n                  handleLogin={this.handleLogin}\n                  handleLogout={this.handleLogout}\n                  loggedInStatus={this.state.loggedInStatus}\n                />\n              )}\n            />\n\n            <Route path=\"/login\">\n              <div className=\"logo\">\n                <h1>Sign-in form</h1>\n              </div>\n            </Route>\n            <Route path=\"/logged\">\n              <div className=\"logo\">\n                <h1>If you are here you are logged in. </h1>\n                <SearchForm />\n                <Sidebar />\n              </div>\n            </Route>\n            <Route\n              exact\n              path={\"/dashboard\"}\n              render={(props) => (\n                <Dashboard\n                  {...props}\n                  loggedInStatus={this.state.loggedInStatus}\n                />\n              )}\n            />\n\n            <Route path=\"/search_results\">\n              <div className=\"logo\">\n                <h1>All Search results</h1>\n                <Job />\n              </div>\n            </Route>\n            <Route path=\"/users\">\n              <div className=\"logo\">\n                <h1>Hello Users</h1>\n                <User />\n              </div>\n            </Route>\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'semantic-ui-css/semantic.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\n\n"],"sourceRoot":""}